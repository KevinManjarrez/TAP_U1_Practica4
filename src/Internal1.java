


import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Kevin Manjarrez
 */
public class Internal1 extends javax.swing.JInternalFrame {
   
    /**
     * Creates new form NewJInternalFrame
     */
    public Internal1() {
        initComponents();
         m = (DefaultTableModel) tblPredial.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblCodigoPostal = new javax.swing.JLabel();
        lblClaveCatastral = new javax.swing.JLabel();
        ftClaveCatastral = new javax.swing.JFormattedTextField();
        ftCodigoPostal = new javax.swing.JFormattedTextField();
        txtCalle = new javax.swing.JTextField();
        lblCalle = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        lblNumero = new javax.swing.JLabel();
        lblColonia = new javax.swing.JLabel();
        txtColonia = new javax.swing.JTextField();
        lblTituloDatosDomicilio = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnVaciarTabla = new javax.swing.JButton();
        btnVaciarCampos = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblFrente = new javax.swing.JLabel();
        txtArea = new javax.swing.JTextField();
        lblArea = new javax.swing.JLabel();
        lblFondo = new javax.swing.JLabel();
        txtFrente = new javax.swing.JTextField();
        txtFondo = new javax.swing.JTextField();
        lblLote = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblServicios = new javax.swing.JLabel();
        cmbServicios = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        txtCambio = new javax.swing.JFormattedTextField();
        lblIVA = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        lblPago = new javax.swing.JLabel();
        lblCambio = new javax.swing.JLabel();
        chbHabilitar = new javax.swing.JCheckBox();
        lblDescuento = new javax.swing.JLabel();
        lblTotal2 = new javax.swing.JLabel();
        txtSubtotal = new javax.swing.JFormattedTextField();
        txtIVA = new javax.swing.JFormattedTextField();
        txtTotal = new javax.swing.JFormattedTextField();
        txtDescuento = new javax.swing.JTextField();
        txtTotal2 = new javax.swing.JFormattedTextField();
        txtPago = new javax.swing.JTextField();
        lblSubTotal = new javax.swing.JLabel();
        lblCobro = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPredial = new javax.swing.JTable();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setMaximizable(true);
        setResizable(true);
        setTitle("Formulario Catastro");
        setToolTipText("");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        lblCodigoPostal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblCodigoPostal.setText("Código Postal");

        lblClaveCatastral.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblClaveCatastral.setText("Clave Catastral");

        try {
            ftClaveCatastral.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("M###-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftClaveCatastral.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ftClaveCatastralKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ftClaveCatastralKeyReleased(evt);
            }
        });

        try {
            ftCodigoPostal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftCodigoPostal.setText("#####");
        ftCodigoPostal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ftCodigoPostalKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ftCodigoPostalKeyReleased(evt);
            }
        });

        txtCalle.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtCalle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCalleKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCalleKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCalleKeyTyped(evt);
            }
        });

        lblCalle.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblCalle.setText("Calle: ");

        txtNumero.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNumeroKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroKeyTyped(evt);
            }
        });

        lblNumero.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblNumero.setText("Número de vivienda:");

        lblColonia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblColonia.setText("Colonia:");

        txtColonia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtColonia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtColoniaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtColoniaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtColoniaKeyTyped(evt);
            }
        });

        lblTituloDatosDomicilio.setBackground(new java.awt.Color(255, 255, 255));
        lblTituloDatosDomicilio.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblTituloDatosDomicilio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTituloDatosDomicilio.setText("Datos del domicilio.");
        lblTituloDatosDomicilio.setOpaque(true);

        btnGuardar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnVaciarTabla.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnVaciarTabla.setText("Vaciar Tabla");
        btnVaciarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVaciarTablaActionPerformed(evt);
            }
        });

        btnVaciarCampos.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnVaciarCampos.setText("Vaciar campos");
        btnVaciarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVaciarCamposActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTituloDatosDomicilio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblClaveCatastral)
                            .addComponent(lblCalle))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCalle)
                            .addComponent(ftClaveCatastral, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblColonia)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNumero)
                                    .addComponent(lblCodigoPostal))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtColonia)
                                    .addComponent(txtNumero)
                                    .addComponent(ftCodigoPostal, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnVaciarCampos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(167, 167, 167)
                                .addComponent(btnVaciarTabla)))
                        .addGap(0, 79, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblTituloDatosDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblClaveCatastral)
                    .addComponent(ftClaveCatastral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCalle)
                    .addComponent(txtCalle, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblNumero))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblColonia)
                    .addComponent(txtColonia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblCodigoPostal)
                    .addComponent(ftCodigoPostal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(btnGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVaciarCampos)
                    .addComponent(btnVaciarTabla))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        lblFrente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblFrente.setText("Frente:");

        txtArea.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtArea.setEnabled(false);

        lblArea.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblArea.setText("Área:");

        lblFondo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblFondo.setText("Fondo");

        txtFrente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtFrente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFrenteKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFrenteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFrenteKeyTyped(evt);
            }
        });

        txtFondo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtFondo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFondoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFondoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFondoKeyTyped(evt);
            }
        });

        lblLote.setBackground(new java.awt.Color(255, 255, 255));
        lblLote.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblLote.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLote.setText("Datos del Lote.");
        lblLote.setOpaque(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFrente)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFondo)
                            .addComponent(lblArea))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFrente, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtArea, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(lblLote, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(lblLote)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFondo, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFrente, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtFrente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblArea)
                    .addComponent(txtArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        lblServicios.setBackground(new java.awt.Color(255, 255, 255));
        lblServicios.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblServicios.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblServicios.setText("Servicios.");
        lblServicios.setOpaque(true);

        cmbServicios.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmbServicios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elige el servicio:", "Agua", "Luz", "Drenaje" }));
        cmbServicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbServiciosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmbServicios, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblServicios, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(cmbServicios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(lblServicios)
                    .addGap(0, 37, Short.MAX_VALUE)))
        );

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));

        txtCambio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00 $"))));
        txtCambio.setEnabled(false);
        txtCambio.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblIVA.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblIVA.setText("IVA:");

        lblTotal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblTotal.setText("Total");

        lblPago.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblPago.setText("Pago con:");

        lblCambio.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblCambio.setText("Cambio");

        chbHabilitar.setText("Hablilitar descuento.");
        chbHabilitar.setEnabled(false);

        lblDescuento.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblDescuento.setText("Descuento: ");

        lblTotal2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblTotal2.setText("Total a pagar");

        txtSubtotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00 $"))));
        txtSubtotal.setEnabled(false);
        txtSubtotal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        txtIVA.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00 $"))));
        txtIVA.setEnabled(false);
        txtIVA.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        txtTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00 $"))));
        txtTotal.setEnabled(false);
        txtTotal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        txtDescuento.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtDescuento.setEnabled(false);
        txtDescuento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescuentoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDescuentoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescuentoKeyTyped(evt);
            }
        });

        txtTotal2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00 $"))));
        txtTotal2.setEnabled(false);
        txtTotal2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        txtPago.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtPago.setEnabled(false);
        txtPago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPagoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPagoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPagoKeyTyped(evt);
            }
        });

        lblSubTotal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblSubTotal.setText("Subtotal:");

        lblCobro.setBackground(new java.awt.Color(255, 255, 255));
        lblCobro.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblCobro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCobro.setText("Cobro.");
        lblCobro.setOpaque(true);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSubTotal)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTotal)
                            .addComponent(lblIVA))
                        .addGap(72, 72, 72)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtTotal)
                                .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtIVA, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblDescuento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTotal2)
                            .addComponent(lblPago)
                            .addComponent(lblCambio))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtTotal2))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(txtPago, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCambio, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(chbHabilitar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(lblCobro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(lblCobro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTotal2)
                            .addComponent(txtTotal2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblPago)
                                .addComponent(txtIVA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCambio)
                            .addComponent(txtCambio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSubTotal)
                            .addComponent(txtSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addComponent(lblIVA)
                        .addGap(8, 8, 8)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTotal)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescuento)
                    .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbHabilitar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Tabla de registros.");
        jLabel1.setOpaque(true);

        tblPredial.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tblPredial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Clave catastral", "Calle", "Número", "Colonia", "Código postal", "Fondo ", "Frente", "Área", "Subtotal", "IVA", "Total", "Descuento", "Total a pagar", "Pago", "Cambio"
            }
        ));
        tblPredial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPredialMouseClicked(evt);
            }
        });
        tblPredial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblPredialKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblPredial);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(190, 190, 190))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            ftClaveCatastral.requestFocus();
        }//if.
    }//GEN-LAST:event_formKeyPressed

    private void ftClaveCatastralKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ftClaveCatastralKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                validarClaveCatastral(ftClaveCatastral.getText());
            } catch (Excepciones e) {
                e.getMessage();
            }//catch.
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            txtCalle.requestFocus();
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            txtFondo.requestFocus();
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            super.requestFocus();
        }//if.
    }//GEN-LAST:event_ftClaveCatastralKeyPressed

    private void ftClaveCatastralKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ftClaveCatastralKeyReleased
        if (camposLlenos() == true) {
            btnGuardar.setEnabled(true);
            txtPago.setEnabled(true);
            chbHabilitar.setEnabled(true);
        } else {
            inhabilitar();
        }//else.
    }//GEN-LAST:event_ftClaveCatastralKeyReleased

    private void txtCalleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCalleKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                calleVacia(txtCalle.getText());
            } catch (Excepciones e) {
                e.getMessage();
            }//catch
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            ftClaveCatastral.requestFocus();
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            txtNumero.requestFocus();
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            txtFondo.requestFocus();
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            super.requestFocus();
        }//if.
    }//GEN-LAST:event_txtCalleKeyPressed

    private void txtCalleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCalleKeyReleased
        txtCalle.setText(txtCalle.getText().toUpperCase());
        if (camposLlenos() == true) {
            btnGuardar.setEnabled(true);
            txtPago.setEnabled(true);
            chbHabilitar.setEnabled(true);
        } else {
            inhabilitar();
        }//else.
    }//GEN-LAST:event_txtCalleKeyReleased

    private void txtCalleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCalleKeyTyped
        if (!Character.isDigit(evt.getKeyChar())
                && !Character.isAlphabetic(evt.getKeyChar())
                && !(evt.getKeyChar() == KeyEvent.VK_BACK_SPACE)
                && !(evt.getKeyChar() == KeyEvent.VK_SPACE)) {
            evt.consume();
        }//if.
    }//GEN-LAST:event_txtCalleKeyTyped

    private void txtNumeroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                numeroVacio(txtNumero.getText());
            } catch (Excepciones e) {
                e.getMessage();
            }//if.
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txtCalle.requestFocus();
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            txtColonia.requestFocus();
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            txtFondo.requestFocus();
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            super.requestFocus();
        }//if.
    }//GEN-LAST:event_txtNumeroKeyPressed

    private void txtNumeroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyReleased
        if (camposLlenos() == true) {
            btnGuardar.setEnabled(true);
            txtPago.setEnabled(true);
            chbHabilitar.setEnabled(true);
        } else {
            inhabilitar();
        }//else.
    }//GEN-LAST:event_txtNumeroKeyReleased

    private void txtNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyTyped
        if (!Character.isDigit(evt.getKeyChar())
                && !(evt.getKeyChar() == KeyEvent.VK_BACK_SPACE)
                && !(evt.getKeyChar() == KeyEvent.VK_SPACE)) {
            evt.consume();
        }//if.
    }//GEN-LAST:event_txtNumeroKeyTyped

    private void txtColoniaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtColoniaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                coloniaVacia(txtColonia.getText());
            } catch (Excepciones e) {
                e.getMessage();
            }//catch.
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txtNumero.requestFocus();
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            ftCodigoPostal.requestFocus();
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            txtFondo.requestFocus();
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            super.requestFocus();
        }//if.
    }//GEN-LAST:event_txtColoniaKeyPressed

    private void txtColoniaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtColoniaKeyReleased
        txtColonia.setText(txtColonia.getText().toUpperCase());
        if (camposLlenos() == true) {
            btnGuardar.setEnabled(true);
            txtPago.setEnabled(true);
            chbHabilitar.setEnabled(true);
        } else {
            inhabilitar();
        }//else.
    }//GEN-LAST:event_txtColoniaKeyReleased

    private void txtColoniaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtColoniaKeyTyped
        if (!Character.isDigit(evt.getKeyChar())
                && !Character.isAlphabetic(evt.getKeyChar())
                && !(evt.getKeyChar() == KeyEvent.VK_BACK_SPACE)
                && !(evt.getKeyChar() == KeyEvent.VK_SPACE)) {
            evt.consume();
        }//if.
    }//GEN-LAST:event_txtColoniaKeyTyped

    private void ftCodigoPostalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ftCodigoPostalKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                validarCodigoPostal(ftCodigoPostal.getText());
            } catch (Excepciones e) {
                e.getMessage();
            }//catch.
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txtColonia.requestFocus();
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            txtFondo.requestFocus();
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            txtFondo.requestFocus();
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            super.requestFocus();
        }//if.
    }//GEN-LAST:event_ftCodigoPostalKeyPressed

    private void ftCodigoPostalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ftCodigoPostalKeyReleased
        if (camposLlenos() == true) {
            btnGuardar.setEnabled(true);
            txtPago.setEnabled(true);
            chbHabilitar.setEnabled(true);
        } else {
            inhabilitar();
        }//else.
    }//GEN-LAST:event_ftCodigoPostalKeyReleased

    private void txtFondoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFondoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                fondoVacio(txtFondo.getText());
            } catch (Excepciones e) {
                e.getMessage();
            }//catch.
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            ftCodigoPostal.requestFocus();
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            txtFrente.requestFocus();
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            ftClaveCatastral.requestFocus();
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            super.requestFocus();
        }//if.
    }//GEN-LAST:event_txtFondoKeyPressed

    private void txtFondoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFondoKeyReleased
        if (camposLlenos() == true) {
            btnGuardar.setEnabled(true);
            txtPago.setEnabled(true);
            chbHabilitar.setEnabled(true);
        } else {
            vaciarCuenta();
        }//else.

        if (txtFrente.getText().isEmpty() || txtFondo.getText().isEmpty()) {
            vaciarCuenta();
        }//if.

        if (txtFrente.getText().length() > 0 && txtFondo.getText().length() > 0) {
            operaciones();
            if (Float.parseFloat(txtFrente.getText()) == 0 || Float.parseFloat(txtFondo.getText()) == 0) {
                vaciarCuenta();
            }//if.
        }//if.
    }//GEN-LAST:event_txtFondoKeyReleased

    private void txtFondoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFondoKeyTyped
        if (!Character.isDigit(evt.getKeyChar())
                && !(evt.getKeyChar() == KeyEvent.VK_BACK_SPACE)
                && !(evt.getKeyChar() == KeyEvent.VK_PERIOD)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtFondoKeyTyped

    private void txtFrenteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFrenteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                frenteVacio(txtFrente.getText());
            } catch (Excepciones e) {
                e.getMessage();
            }//catch
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txtFondo.requestFocus();
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            ftClaveCatastral.requestFocus();
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            super.requestFocus();
        }//if.
    }//GEN-LAST:event_txtFrenteKeyPressed

    private void txtFrenteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFrenteKeyReleased
        if (camposLlenos() == true) {
            btnGuardar.setEnabled(true);
            txtPago.setEnabled(true);
            chbHabilitar.setEnabled(true);
        } else {
            vaciarCuenta();
        }

        if (txtFrente.getText().isEmpty() || txtFondo.getText().isEmpty()) {
            vaciarCuenta();
        }

        if (txtFrente.getText().length() > 0 && txtFondo.getText().length() > 0) {
            operaciones();
            if (Float.parseFloat(txtFrente.getText()) == 0 || Float.parseFloat(txtFondo.getText()) == 0) {
                vaciarCuenta();
            }
        }
    }//GEN-LAST:event_txtFrenteKeyReleased

    private void txtFrenteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFrenteKeyTyped
        if (!Character.isDigit(evt.getKeyChar())
                && !(evt.getKeyChar() == KeyEvent.VK_BACK_SPACE)
                && !(evt.getKeyChar() == KeyEvent.VK_PERIOD)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtFrenteKeyTyped

    private void cmbServiciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbServiciosActionPerformed
        int opcion = cmbServicios.getSelectedIndex();
        
        switch(opcion){
            case 1 -> {
                    if (txtFrente.getText().length() > 0 && txtFondo.getText().length() > 0) {
                        impuesto = (float) (subtotal * .10);
                        subtotal = subtotal + impuesto;
                        txtSubtotal.setText(subtotal + "");

                        iva = (float) (subtotal * 0.16);
                        txtIVA.setText(iva + "");

                        total = subtotal + iva;
                        txtTotal.setText(total + "");

                        total2 = total;
                        txtTotal2.setText(total2 + "");
                    break;
                }//if
            }//case 1.
            case 2 -> {
                if (txtFrente.getText().length() > 0 && txtFondo.getText().length() > 0) {
                impuesto = (float) (subtotal * .10);
                subtotal = subtotal + impuesto;
                txtSubtotal.setText(subtotal + "");

                iva = (float) (subtotal * 0.16);
                txtIVA.setText(iva + "");

                total = subtotal + iva;
                txtTotal.setText(total + "");

                total2 = total;
                txtTotal2.setText(total2 + "");
                }//if.
            }//case 2.
            
            case 3 -> {
                if (txtFrente.getText().length() > 0 && txtFondo.getText().length() > 0) {
                impuesto = (float) (subtotal * .10);
                subtotal = subtotal + impuesto;
                txtSubtotal.setText(subtotal + "");

                iva = (float) (subtotal * 0.16);
                txtIVA.setText(iva + "");

                total = subtotal + iva;
                txtTotal.setText(total + "");

                total2 = total;
                txtTotal2.setText(total2 + "");
                }//if.
            }//case 3.
            
            default -> {
                operaciones();
            }//default.    
        }//switch.
    }//GEN-LAST:event_cmbServiciosActionPerformed

    private void txtDescuentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescuentoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                validarDescuento(txtDescuento.getText());
            } catch (Excepciones e) {
                e.getMessage();
            }//if.
        }//if
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            txtPago.requestFocus();
        }//if.

        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            super.requestFocus();
        }//if.
    }//GEN-LAST:event_txtDescuentoKeyPressed

    private void txtDescuentoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescuentoKeyReleased
        if (txtDescuento.getText().length() > 0) {
            if (Float.parseFloat(txtDescuento.getText()) > 0 && Float.parseFloat(txtDescuento.getText()) <= 50) {
                descuento = total2 * (Float.parseFloat(txtDescuento.getText()) / 100);
                txtTotal2.setText((total2 - descuento) + "");
            } else {
                txtTotal2.setText(total2 + "");
            }//if.
        } else {
            txtTotal2.setText(total2 + "");
        }//if.
    }//GEN-LAST:event_txtDescuentoKeyReleased

    private void txtDescuentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescuentoKeyTyped
        if (txtDescuento.getText().length() == 2) {
            evt.consume();
        }//if

        if (!Character.isDigit(evt.getKeyChar())
                && !(evt.getKeyChar() == KeyEvent.VK_BACK_SPACE)
                && !(evt.getKeyChar() == KeyEvent.VK_PERIOD)) {
            evt.consume();
        }//if.
    }//GEN-LAST:event_txtDescuentoKeyTyped

    private void txtPagoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPagoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                validarPago(txtPago.getText());
            } catch (Excepciones e) {
                e.getMessage();
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            txtDescuento.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            super.requestFocus();
        }
    }//GEN-LAST:event_txtPagoKeyPressed

    private void txtPagoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPagoKeyReleased
        if (txtPago.getText().length() > 0) {
            if (Float.parseFloat(txtPago.getText()) >= total2) {
                pago = Float.parseFloat(txtPago.getText());
                cambio = pago - Float.parseFloat(txtTotal2.getText());
                if(cambio>=0){
                txtCambio.setText(cambio + "");
                }
            } else {
                txtCambio.setText("");
            }
        } else {
            txtCambio.setText("");
        }
    }//GEN-LAST:event_txtPagoKeyReleased

    private void txtPagoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPagoKeyTyped
        if (!Character.isDigit(evt.getKeyChar())
                && !(evt.getKeyChar() == KeyEvent.VK_BACK_SPACE)
                && !(evt.getKeyChar() == KeyEvent.VK_PERIOD)) {
            evt.consume();
        }//if.
    }//GEN-LAST:event_txtPagoKeyTyped

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (btnGuardar.isEnabled()) {
            chbHabilitar.setEnabled(true);
            txtPago.setEnabled(true);
        }

        if (camposLlenos2() == true) {
            camposVaciosExcepciones2();
            Object O[] =new Object[15];
            O[0]=ftClaveCatastral.getText();
            O[1]=txtCalle.getText();
            O[2]=txtNumero.getText();
            O[3]=txtColonia.getText();
            O[4]=ftCodigoPostal.getText();
            O[5]=txtFondo.getText();
            O[6]=txtFrente.getText();
            O[7]=txtArea.getText();
            O[8]=txtSubtotal.getText();
            O[9]=txtIVA.getText();
            O[10]=txtTotal.getText();
            O[11]=txtDescuento.getText();
            O[12]=txtTotal2.getText();
            O[13]=txtPago.getText();
            O[14]=txtCambio.getText();
            m.addRow(O);
           
            showMessageDialog(this, "Registro guardado.", "Predial", JOptionPane.INFORMATION_MESSAGE);
            llenarTabla();
            vaciarCampos();
        } else {
            showMessageDialog(this, "No se pudo guardar el registro. ", "Predial.", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void tblPredialKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblPredialKeyPressed
        int r = tblPredial.getSelectedRow();
        if (evt.getKeyCode() == 8) {
            int dialogo = JOptionPane.showConfirmDialog(null, "¿Esta seguro?", "Alerta!", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
            if (dialogo == JOptionPane.YES_OPTION) {
                try {
                    m.removeRow(r);
                    showMessageDialog(this, "Fila borrada exitosamente.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                    //i.vaciarCampos();
                } catch (ArrayIndexOutOfBoundsException ex) {
                    showMessageDialog(this, "No has seleccionado el registro.", "Tabla.", JOptionPane.INFORMATION_MESSAGE);
                }//catch
            }//if.
        }//if.
    }//GEN-LAST:event_tblPredialKeyPressed

    private void tblPredialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPredialMouseClicked
        int r = tblPredial.getSelectedRow();
        ftClaveCatastral.setText(m.getValueAt(r, 0).toString());
        txtCalle.setText(m.getValueAt(r, 1).toString());
        txtNumero.setText(m.getValueAt(r, 2).toString());
        txtColonia.setText(m.getValueAt(r, 3).toString());
        ftCodigoPostal.setText(m.getValueAt(r, 4).toString());
        txtFrente.setText(m.getValueAt(r, 5).toString());
        txtFondo.setText(m.getValueAt(r, 6).toString());
        txtArea.setText(m.getValueAt(r, 7).toString());
        txtSubtotal.setText(m.getValueAt(r, 8).toString());
        txtIVA.setText(m.getValueAt(r, 9).toString());
        txtTotal.setText(m.getValueAt(r, 10).toString());
        txtDescuento.setText(m.getValueAt(r, 11).toString());
        txtTotal2.setText(m.getValueAt(r, 12).toString());
        txtPago.setText(m.getValueAt(r, 13).toString());
        txtCambio.setText(m.getValueAt(r, 14).toString());
        btnGuardar.setEnabled(true);
        txtPago.setEnabled(true);
    }//GEN-LAST:event_tblPredialMouseClicked

    private void btnVaciarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVaciarCamposActionPerformed
       vaciarCampos();
    }//GEN-LAST:event_btnVaciarCamposActionPerformed

    private void btnVaciarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVaciarTablaActionPerformed
        if (m.getRowCount() > 0) {
            int a = m.getRowCount() - 1;
            for (int i = a; i >= 0; i--) {
                m.removeRow(i);
            }//for.

            showMessageDialog(this, "Registros removidos con éxito", "Tabla.", JOptionPane.INFORMATION_MESSAGE);
        } else {
            showMessageDialog(this, "No existen registros por eliminar.", "Tabla.", JOptionPane.INFORMATION_MESSAGE);
        }//else.
    }//GEN-LAST:event_btnVaciarTablaActionPerformed
    public void validarClaveCatastral(String c) throws Excepciones {
        if (!c.matches("[M]+\\d{3}+[-]+\\d{3}")) {
            showMessageDialog(this, "Formato: M###-###", "Clave catastral.", JOptionPane.ERROR_MESSAGE);
            ftClaveCatastral.requestFocus();
        }//if.
        else {
            txtCalle.requestFocus();
        }//else.
    }//claveCatastral.
    
     public void calleVacia(String c) throws Excepciones {
        if (c.isEmpty()) {
            showMessageDialog(this, "No has ingresado la calle.", "Calle.", JOptionPane.INFORMATION_MESSAGE);
            txtCalle.requestFocus();
        } else if (!c.isEmpty()) {
            txtNumero.requestFocus();
        }//else if.
    }//calleVacia.
     
    public void numeroVacio(String c) throws Excepciones {
        if (c.isEmpty()) {
            showMessageDialog(this, "No has ingresado el número de la vivienda.", "Número.", JOptionPane.INFORMATION_MESSAGE);
            txtNumero.requestFocus();
        } else if (!c.isEmpty()) {
            txtColonia.requestFocus();
        }//else if.
    }//numeroVacio.
    
    public void coloniaVacia(String c) throws Excepciones {
        if (c.isEmpty()) {
            showMessageDialog(this, "No has ingresado la colonia.", "Colonia.", JOptionPane.INFORMATION_MESSAGE);
            txtColonia.requestFocus();
        } else if (!c.isEmpty()) {
            ftCodigoPostal.requestFocus();
        }//else if.
    }//coloniaVacia.
    
    public void validarCodigoPostal(String c) throws Excepciones {
        if (c.isEmpty()) {
            showMessageDialog(this, "No has ingresado el código postal.", "Código Postal.", JOptionPane.INFORMATION_MESSAGE);
            ftCodigoPostal.requestFocus();
        } else if (c.length() < 5) {
            showMessageDialog(this, "Son cinco dígitos.", "Código Postal.", JOptionPane.WARNING_MESSAGE);
            ftCodigoPostal.requestFocus();
        } else if (!c.isEmpty()) {
            txtFondo.requestFocus();
        }//else if.
    }//validarCodigoPostal.
    
    public void fondoVacio(String c) throws Excepciones {
        if (c.isEmpty()) {
            showMessageDialog(this, "No has ingresado el fondo.", "Fondo.", JOptionPane.INFORMATION_MESSAGE);
            txtFondo.requestFocus();
        } else if (!c.isEmpty()) {
            txtFrente.requestFocus();
        }//else if.
    }//fondoVacio.
    
    public void frenteVacio(String c) throws Excepciones {
        if (c.isEmpty()) {
            showMessageDialog(this, "No has ingresado el frente.", "Frente.", JOptionPane.INFORMATION_MESSAGE);
            txtFrente.requestFocus();
        }//if.
    }//frenteVacio.
    
    public void validarDescuento(String c) throws Excepciones {
        if (c.isEmpty()) {
            showMessageDialog(this, "No has ingresado el descuento", "Descuento.", JOptionPane.INFORMATION_MESSAGE);
            txtDescuento.requestFocus();
        } else if (Float.parseFloat(c) <= 0 || Float.parseFloat(c) > 50) {
            showMessageDialog(this, "Sólo se admite de 1-50 % de descuento.", "Descuento.", JOptionPane.WARNING_MESSAGE);
            txtDescuento.requestFocus();
        } else if (!c.isEmpty()) {
            txtPago.requestFocus();
        }//else if.
    }//validarDescuento.
    
    public void validarPago(String c) throws Excepciones {
        if (c.isEmpty()) {
            showMessageDialog(this, "No has ingresado el pago", "Pago.", JOptionPane.INFORMATION_MESSAGE);
            txtDescuento.requestFocus();
        } else if (Float.parseFloat(c) < Float.parseFloat(txtTotal2.getText())) {
            showMessageDialog(this, "Cantidad menor a la requerida.", "Pagar", JOptionPane.WARNING_MESSAGE);
            txtDescuento.requestFocus();
        } else if (!c.isEmpty() && (Float.parseFloat(c) >= Float.parseFloat(txtTotal2.getText()))) {
            btnGuardar.requestFocus();
        }//else if.
    }//valildarPago.

    public void vaciarCuenta() {
        txtArea.setText("");
        txtSubtotal.setText("");
        txtIVA.setText("");
        txtTotal.setText("");
        txtDescuento.setText("");
        txtTotal2.setText("");
        txtPago.setText("");
        txtCambio.setText("");
        btnGuardar.setEnabled(false);
        chbHabilitar.setEnabled(false);
        chbHabilitar.setSelected(false);
        txtDescuento.setEnabled(false);
        txtPago.setEnabled(false);
    }//vaciarCuenta.
    
    public void inhabilitar() {
        txtDescuento.setText("");
        txtPago.setText("");
        txtCambio.setText("");
        btnGuardar.setEnabled(false);
        chbHabilitar.setSelected(false);
        chbHabilitar.setEnabled(false);
        txtDescuento.setEnabled(false);
        txtPago.setEnabled(false);
    }//inhabilitar.
    
    public void operaciones() {
        if (txtFrente.getText().length() > 0 && txtFondo.getText().length() > 0) {
            area = Float.parseFloat(txtFrente.getText()) * Float.parseFloat(txtFondo.getText());
            txtArea.setText(area + "");

            subtotal = area * 2;
            txtSubtotal.setText(subtotal + "");

            iva = (float) (subtotal * 0.16);
            txtIVA.setText(iva + "");

            total = subtotal + iva;
            txtTotal.setText(total + "");

            total2 = total;
            txtTotal2.setText(total2 + "");
        }//if.
    }//operaciones.
    
    public boolean camposLlenos() {
        return (!(ftClaveCatastral.getText().isEmpty())
                && (ftClaveCatastral.getText().matches("[M]+\\d{3}+[-]+\\d{3}"))
                && !(txtCalle.getText().isEmpty())
                && !(txtNumero.getText().isEmpty())
                && !(txtColonia.getText().isEmpty())
                && !(ftCodigoPostal.getText().isEmpty())
                && (ftCodigoPostal.getText().length() == 5)
                && !(txtFondo.getText().isEmpty())
                && !(txtFrente.getText().isEmpty()));
    }//camposLlenos.
    
    public void camposVaciosExcepciones2() {
        try {
            validarClaveCatastral(ftClaveCatastral.getText());
        } catch (Excepciones e) {
            e.getMessage();
        }//catch.

        try {
            calleVacia(txtCalle.getText());
        } catch (Excepciones e) {
            e.getMessage();
        }//catch.

        try {
            numeroVacio(txtNumero.getText());
        } catch (Excepciones e) {
            e.getMessage();
        }//catch.

        try {
            coloniaVacia(txtColonia.getText());
        } catch (Excepciones e) {
            e.getMessage();
        }//catch.

        try {
            validarCodigoPostal(ftCodigoPostal.getText());
        } catch (Excepciones e) {
            e.getMessage();
        }//catch.

        try {
            fondoVacio(txtFondo.getText());
        } catch (Excepciones e) {
            e.getMessage();
        }//catch.

        try {
            frenteVacio(txtFrente.getText());
        } catch (Excepciones e) {
            e.getMessage();
        }//catch.

        try {
            validarPago(txtPago.getText());
        } catch (Excepciones e) {
            e.getMessage();
        }//catch.
    }//camposVaciosExcepciones2.
        
    public boolean camposLlenos2() {
        return (!(ftClaveCatastral.getText().isEmpty())
                && (ftClaveCatastral.getText().matches("[M]+\\d{3}+[-]+\\d{3}"))
                && !(txtCalle.getText().isEmpty())
                && !(txtNumero.getText().isEmpty())
                && !(txtColonia.getText().isEmpty())
                && !(ftCodigoPostal.getText().isEmpty())
                && (ftCodigoPostal.getText().length() == 5)
                && !(txtFondo.getText().isEmpty())
                && !(txtFrente.getText().isEmpty())
                && !(txtPago.getText().isEmpty())
                && !(txtCambio.getText().isEmpty()));
    }//campsoLLenos2.
    
    private void llenarTabla() {
        for (int i = 0; i < a; i++) {
            m.setValueAt(ftClaveCatastral.getText(), i, 0);
            m.setValueAt(txtCalle.getText(), i, 1);
            m.setValueAt(txtNumero.getText(), i, 2);
            m.setValueAt(txtColonia.getText(), i, 3);
            m.setValueAt(ftCodigoPostal.getText(), i, 4);
            m.setValueAt(txtFondo.getText(), i, 5);
            m.setValueAt(txtFrente.getText(), i, 6);
            m.setValueAt(txtArea.getText(), i, 7);
            m.setValueAt(txtSubtotal.getText(), i, 8);
            m.setValueAt(txtIVA.getText(), i, 9);
            m.setValueAt(txtTotal.getText(), i, 10);
            m.setValueAt(txtDescuento.getText(), i, 11);
            m.setValueAt(txtTotal2.getText(), i, 12);
            m.setValueAt(txtPago.getText(), i, 13);
            m.setValueAt(txtCambio.getText(), i, 14);
        }//for.
    }//llenarTabla.
    
       public void vaciarCampos() {
        ftClaveCatastral.setText("");
        txtCalle.setText("");
        txtNumero.setText("");
        txtColonia.setText("");
        ftCodigoPostal.setText("");
        txtFrente.setText("");
        txtFondo.setText("");
        txtArea.setText("");
        txtSubtotal.setText("");
        txtIVA.setText("");
        txtTotal.setText("");
        txtDescuento.setText("");
        txtTotal2.setText("");
        txtPago.setText("");
        txtCambio.setText("");
        btnGuardar.setEnabled(false);
        chbHabilitar.setEnabled(false);
        txtDescuento.setEnabled(false);
        txtPago.setEnabled(false);
        chbHabilitar.setSelected(false);
    }//vaciarCampos.

    protected DefaultTableModel m;
    protected int a;
    protected int b;
    protected int c;
    protected float impuesto;
    protected float area;
    protected float subtotal;
    protected float iva;
    protected float total;
    protected float descuento;
    protected float total2;
    protected float pago;
    protected float cambio;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JButton btnGuardar;
    protected javax.swing.JButton btnVaciarCampos;
    protected javax.swing.JButton btnVaciarTabla;
    protected javax.swing.JCheckBox chbHabilitar;
    protected javax.swing.JComboBox<String> cmbServicios;
    protected javax.swing.JFormattedTextField ftClaveCatastral;
    protected javax.swing.JFormattedTextField ftCodigoPostal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    protected javax.swing.JLabel lblArea;
    protected javax.swing.JLabel lblCalle;
    protected javax.swing.JLabel lblCambio;
    protected javax.swing.JLabel lblClaveCatastral;
    protected javax.swing.JLabel lblCobro;
    protected javax.swing.JLabel lblCodigoPostal;
    protected javax.swing.JLabel lblColonia;
    protected javax.swing.JLabel lblDescuento;
    protected javax.swing.JLabel lblFondo;
    protected javax.swing.JLabel lblFrente;
    protected javax.swing.JLabel lblIVA;
    protected javax.swing.JLabel lblLote;
    protected javax.swing.JLabel lblNumero;
    protected javax.swing.JLabel lblPago;
    protected javax.swing.JLabel lblServicios;
    protected javax.swing.JLabel lblSubTotal;
    protected javax.swing.JLabel lblTituloDatosDomicilio;
    protected javax.swing.JLabel lblTotal;
    protected javax.swing.JLabel lblTotal2;
    private javax.swing.JTable tblPredial;
    protected javax.swing.JTextField txtArea;
    protected javax.swing.JTextField txtCalle;
    protected javax.swing.JFormattedTextField txtCambio;
    protected javax.swing.JTextField txtColonia;
    protected javax.swing.JTextField txtDescuento;
    protected javax.swing.JTextField txtFondo;
    protected javax.swing.JTextField txtFrente;
    protected javax.swing.JFormattedTextField txtIVA;
    protected javax.swing.JTextField txtNumero;
    protected javax.swing.JTextField txtPago;
    protected javax.swing.JFormattedTextField txtSubtotal;
    protected javax.swing.JFormattedTextField txtTotal;
    protected javax.swing.JFormattedTextField txtTotal2;
    // End of variables declaration//GEN-END:variables
}
